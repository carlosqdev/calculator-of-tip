{"version":3,"sources":["Bill/Bill.jsx","TipPercentage/TipPercentage.jsx","NumberOfPeople/NumberOfPeople.jsx","TipAmount/TipAmount.jsx","Total/Total.jsx","ButtonReset/ButtonReset.jsx","data.js","img/logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Bill","props","context","useContext","AppContext","className","htmlFor","value","bill","onChange","event","setBill","target","type","name","id","TipPercentage","percentage","useState","showCustomPercentage","setShowCustomPercentage","useEffect","setPercentage","placeholder","onClick","NumberOfPeople","numberOfPeople","setNumberOfPeople","TipAmount","tipAmount","Total","total","ButtonReset","setTipAmount","setTotal","DataTip","React","createContext","App","parseFloat","loading","width","height","src","logo","alt","Provider","map","item","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aa40a72.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { AppContext } from \"../App\";\nimport './Bill.css';\n\nfunction Bill(props) {\n  const context = useContext(AppContext);\n  return (\n    <section className=\"bill__amount\">\n      <label className=\"label\" htmlFor=\"bill\">Bill</label>\n      <input className=\"bill__input\" value={context.bill} onChange={(event) => {context.setBill(event.target.value)}} type=\"number\" name=\"bill\" id=\"bill\" />\n    </section>\n  );\n}\n\nexport default Bill;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { AppContext } from \"../App\";\nimport './TipPercentage.css';\n\nfunction TipPercentage({ percentage }) {\n  const [showCustomPercentage, setShowCustomPercentage] = useState(false);\n\n  const context = useContext(AppContext);\n\n  useEffect(() => {\n    if (percentage === \"Custom\") setShowCustomPercentage(true);\n  }, [percentage]);\n\n  return (\n    <>\n      {showCustomPercentage ? (\n        <input className=\"tip__input\"\n          onChange={(event) => {\n            context.setPercentage(event.target.value);\n          }}\n          type=\"number\"\n          name=\"custom\"\n          id=\"custom\"\n          placeholder=\"Custom\"\n        />\n      ) : (\n        <button className=\"tip__button\"\n          onClick={() => {\n            context.setPercentage(percentage);\n          }}\n        >\n          {percentage}%\n        </button>\n      )}\n    </>\n  );\n}\n\nexport default TipPercentage;\n","import React, { useContext } from \"react\";\nimport \"./NumberOfPeople.css\";\n\nimport { AppContext } from \"../App\";\n\nfunction NumberOfPeople() {\n  const { numberOfPeople, setNumberOfPeople } = useContext(AppContext);\n\n  return (\n    <section className=\"people__wrapper\">\n      <label className=\"label grid__title\">Number of People</label>\n      <label\n        className={numberOfPeople <= 0 ? \"label label__warning grid__warning\" : \"hide\"}>\n        Can't be zero\n      </label>\n      <input\n        className={numberOfPeople <= 0 ? \"input input__warning\" : \"input\"}\n        value={numberOfPeople}\n        onChange={(event) => setNumberOfPeople(event.target.value)}\n        type=\"number\"\n        name=\"numberPeople\"\n        id=\"numberPeople\"\n      />\n    </section>\n  );\n}\n\nexport default NumberOfPeople;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../App\";\nimport './TipAmount.css';\n\nfunction TipAmount() {\n  const {tipAmount} = useContext(AppContext);\n\n  return (\n    <section className=\"tipAmount__container\">\n      <div className=\"tipAmount__wrapper\">\n        <label className=\"label label__white\">Tip Amount</label>\n        <label className=\"label label__gray\">/ person</label>\n      </div>\n      <span className=\"label label__cyan\">\n        ${tipAmount}\n      </span>\n    </section>\n  );\n}\n\nexport default TipAmount;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../App\";\nimport \"./Total.css\";\n\nfunction Total() {\n  const { total } = useContext(AppContext);\n\n  return (\n    <section className=\"total__container\">\n      <div className=\"total__wrapper\">\n        <label className=\"label label__white\">Total</label>\n        <label className=\"label label__gray\">/ person</label>\n      </div>\n      <span className=\"label label__cyan\">${total}</span>\n    </section>\n  );\n}\n\nexport default Total;\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../App\";\n\nfunction ButtonReset() {\n  const {\n    setBill,\n    setPercentage,\n    setNumberOfPeople,\n    setTipAmount,\n    setTotal\n  } = useContext(AppContext);\n\n  function resetCalculator() {\n    setBill(0);\n    setPercentage(0);\n    setNumberOfPeople(0);\n    setTipAmount(0);\n    setTotal(0);\n  }\n\n  return <button className=\"button\" onClick={resetCalculator}>RESET</button>;\n}\n\nexport default ButtonReset;\n","export const DataTip = [\n  {\n    id: 1,\n    percentage: \"5\",\n  },\n  {\n    id: 2,\n    percentage: \"10\",\n  },\n  {\n    id: 3,\n    percentage: \"15\",\n  },\n  {\n    id: 4,\n    percentage: \"25\",\n  },\n  {\n    id: 5,\n    percentage: \"50\",\n  },\n  {\n    id: 6,\n    percentage: \"Custom\",\n  },\n];\n","export default __webpack_public_path__ + \"static/media/logo.3cc0528b.svg\";","import React, { useState, useEffect } from \"react\";\nimport Bill from \"./Bill/Bill\";\nimport TipPercentage from \"./TipPercentage/TipPercentage\";\nimport NumberOfPeople from \"./NumberOfPeople/NumberOfPeople\";\nimport TipAmount from \"./TipAmount/TipAmount\";\nimport Total from \"./Total/Total\";\nimport ButtonReset from \"./ButtonReset/ButtonReset\";\n\nimport { DataTip } from \"./data\";\nimport logo from \"./img/logo.svg\";\nimport \"./App.css\";\n\nexport const AppContext = React.createContext();\n\nfunction App() {\n  const [bill, setBill] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [numberOfPeople, setNumberOfPeople] = useState(0);\n  const [tipAmount, setTipAmount] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    if (bill > 0 && percentage > 0) {\n      setTotal((parseFloat(percentage) * parseFloat(bill)) / 100);\n    }\n\n    if (numberOfPeople > 0 && total > 0) {\n      setTipAmount(parseFloat(total) / parseFloat(numberOfPeople));\n    }\n  }, [percentage, bill, total, numberOfPeople]);\n\n  return (\n    <>\n      <img\n        className=\"img__logo\"\n        loading=\"lazy\"\n        width=\"25%\"\n        height=\"auto\"\n        src={logo}\n        alt=\"Foto de logotipo\"\n      />\n      <section className=\"calculator\">\n        <AppContext.Provider\n          value={{\n            bill,\n            percentage,\n            numberOfPeople,\n            tipAmount,\n            total,\n            setBill,\n            setPercentage,\n            setNumberOfPeople,\n            setTipAmount,\n            setTotal,\n          }}\n        >\n          <section>\n            <Bill />\n            <label className=\"label\">Select Tip %</label>\n            <section className=\"select__tip\">\n              {DataTip.map((item) => (\n                <TipPercentage\n                  key={item.id.toString()}\n                  percentage={item.percentage}\n                />\n              ))}\n            </section>\n            <NumberOfPeople />\n          </section>\n          <section className=\"totals__wrapper\">\n            <div>\n              <TipAmount />\n              <Total />\n            </div>\n            <ButtonReset />\n          </section>\n        </AppContext.Provider>\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}