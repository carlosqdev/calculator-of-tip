{"version":3,"sources":["context/index.js","context/Provider.js","assets/logo.svg","components/Bill.jsx","components/TipPercentage.jsx","components/NumberOfPeople.jsx","components/TipAmount.jsx","components/Total.jsx","components/Button.jsx","data.js","views/Container.jsx","App.js","reportWebVitals.js","index.js"],"names":["GlobalContext","createContext","GlobalProvider","children","useState","bill","setBill","percentage","setPercentage","numberOfPeople","setNumberOfPeople","tipAmount","setTipAmount","total","setTotal","useEffect","parseFloat","Provider","value","handleReset","Bill","props","useContext","className","htmlFor","onChange","e","target","handleChange","type","name","id","TipPercentage","valuePercentage","showCustomPercentage","setShowCustomPercentage","placeholder","onClick","NumberOfPeople","TipAmount","toFixed","Total","Button","DataTip","Container","loading","width","height","src","logo","alt","map","item","toString","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0a4b8a1.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst GlobalContext = createContext({});\n\nexport default GlobalContext;","import { useState, useEffect } from \"react\";\nimport GlobalContext from \"./index\";\n\nexport default function GlobalProvider({children}) {\n  const [bill, setBill] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [numberOfPeople, setNumberOfPeople] = useState(0);\n  const [tipAmount, setTipAmount] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  function handleReset() {\n    setBill(0);\n    setPercentage(0);\n    setNumberOfPeople(0);\n    setTipAmount(0);\n    setTotal(0);\n  }\n\n  useEffect(() => {\n    if (bill > 0 && percentage > 0) {\n      setTotal((parseFloat(percentage) * parseFloat(bill)) / 100);\n    }\n\n    if (numberOfPeople > 0 && total > 0) {\n      setTipAmount(parseFloat(total) / parseFloat(numberOfPeople));\n    }\n  }, [percentage, bill, total, numberOfPeople]);\n\n  return (\n    <GlobalContext.Provider value={{\n      bill,\n      percentage,\n      numberOfPeople,\n      tipAmount,\n      total,\n      setBill,\n      setPercentage,\n      setNumberOfPeople,\n      handleReset\n    }}>\n      {children}\n    </GlobalContext.Provider>\n  )\n}","export default __webpack_public_path__ + \"static/media/logo.3cc0528b.svg\";","import React, { useContext } from \"react\";\nimport GlobalContext from \"../context/index\";\nimport '../styles/components/Bill.css';\n\nfunction Bill(props) {\n  const {bill, setBill } = useContext(GlobalContext);\n\n  function handleChange(e) {\n    setBill(e.target.value);\n  }\n\n  return (\n    <section className=\"bill__amount\">\n      <label className=\"label\" htmlFor=\"bill\">Bill</label>\n      <input\n        onChange={(e) => handleChange(e)}\n        className=\"bill__input\"\n        value={bill}\n        type=\"number\"\n        name=\"bill\"\n        id=\"bill\"\n      />\n    </section>\n  );\n}\n\nexport default Bill;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport GlobalContext from \"../context/index\";\nimport '../styles/components/TipPercentage.css';\n\nfunction TipPercentage({ valuePercentage }) {\n  const [showCustomPercentage, setShowCustomPercentage] = useState(false);\n\n  const {percentage, setPercentage} = useContext(GlobalContext);\n\n  function handleChange(e) {\n    setPercentage(e.target.value);\n  }\n\n  function handleClick() {\n    setPercentage(valuePercentage);\n  }\n\n  useEffect(() => {\n    if (valuePercentage === \"Custom\") setShowCustomPercentage(true);\n  }, [valuePercentage]);\n\n  return (\n    <>\n      {showCustomPercentage ? (\n        <input className=\"tip__input\"\n          onChange={(e) => handleChange(e)}\n          value={percentage}\n          type=\"number\"\n          name=\"custom\"\n          id=\"custom\"\n          placeholder=\"Custom\"\n        />\n      ) : (\n        <button className=\"tip__button\"\n          onClick={() => handleClick()}\n        >\n          {valuePercentage}%\n        </button>\n      )}\n    </>\n  );\n}\n\nexport default TipPercentage;\n","import React, { useContext } from \"react\";\nimport \"../styles/components/NumberOfPeople.css\";\n\nimport GlobalContext  from \"../context/index\";\n\nfunction NumberOfPeople() {\n  const { numberOfPeople, setNumberOfPeople } = useContext(GlobalContext);\n\n  function handleChange(e) {\n    setNumberOfPeople(e.target.value)\n  }\n\n  return (\n    <section className=\"people__wrapper\">\n      <label htmlFor=\"numberPeople\" className=\"label grid__title\">Number of People</label>\n      <label\n        className={numberOfPeople <= 0 ? \"label label__warning grid__warning\" : \"hide\"}>\n        Can't be zero\n      </label>\n      <input\n        onChange={(e) => handleChange(e)}\n        className={numberOfPeople <= 0 ? \"input input__warning\" : \"input\"}\n        value={numberOfPeople}\n        type=\"number\"\n        name=\"numberPeople\"\n        id=\"numberPeople\"\n      />\n    </section>\n  );\n}\n\nexport default NumberOfPeople;\n","import React, { useContext } from \"react\";\nimport GlobalContext from \"../context/index\";\nimport '../styles/components/TipAmount.css';\n\nfunction TipAmount() {\n  const { tipAmount } = useContext(GlobalContext);\n\n  return (\n    <section className=\"tipAmount__container\">\n      <div className=\"tipAmount__wrapper\">\n        <label className=\"label label__white\">Tip Amount</label>\n        <label className=\"label label__gray\">/ person</label>\n      </div>\n      <span className=\"label label__cyan\">\n        ${tipAmount.toFixed(2)}\n      </span>\n    </section>\n  );\n}\n\nexport default TipAmount;\n","import React, { useContext } from \"react\";\nimport GlobalContext from \"../context/index\";\nimport \"../styles/components/Total.css\";\n\nfunction Total() {\n  const { total } = useContext(GlobalContext);\n\n  return (\n    <section className=\"total__container\">\n      <div className=\"total__wrapper\">\n        <label className=\"label label__white\">Total</label>\n        <label className=\"label label__gray\">/ person</label>\n      </div>\n      <span className=\"label label__cyan\">${total.toFixed(2)}</span>\n    </section>\n  );\n}\n\nexport default Total;\n","import React, { useContext } from 'react'\nimport GlobalContext from '../context'\n\nfunction Button() {\n  const { handleReset } = useContext(GlobalContext)\n\n  return (\n    <button\n      className=\"button\"\n      onClick={handleReset}\n    >\n      RESET\n    </button>\n  )\n}\n\nexport default Button\n","export const DataTip = [\n  {\n    id: 1,\n    percentage: \"5\",\n  },\n  {\n    id: 2,\n    percentage: \"10\",\n  },\n  {\n    id: 3,\n    percentage: \"15\",\n  },\n  {\n    id: 4,\n    percentage: \"25\",\n  },\n  {\n    id: 5,\n    percentage: \"50\",\n  },\n  {\n    id: 6,\n    percentage: \"Custom\",\n  },\n];\n","import React from 'react'\nimport logo from '../assets/logo.svg';\nimport Bill from \"../components/Bill\"\nimport TipPercentage from '../components/TipPercentage'\nimport NumberOfPeople from '../components/NumberOfPeople'\nimport TipAmount from '../components/TipAmount'\nimport Total from '../components/Total'\nimport Button from '../components/Button'\n\nimport { DataTip } from '../data';\n\nfunction Container() {\n  return (\n    <>\n      <img\n        className=\"img__logo\"\n        loading=\"lazy\"\n        width=\"25%\"\n        height=\"auto\"\n        src={logo}\n        alt=\"Foto de logotipo\"\n      />\n      <section className=\"calculator\">\n        <section>\n          <Bill />\n          <label htmlFor=\"custom\" className=\"label\">Select Tip %</label>\n          <section className=\"select__tip\">\n            {DataTip?.map((item) => (\n              <TipPercentage\n                key={item.id.toString()}\n                valuePercentage={item.percentage}\n              />\n            ))}\n          </section>\n          <NumberOfPeople />\n        </section>\n        <section className=\"totals__wrapper\">\n          <div>\n            <TipAmount />\n            <Total />\n          </div>\n          <Button />\n        </section>\n      </section>\n    </>\n  )\n}\n\nexport default Container\n","import \"./styles/App.css\";\nimport GlobalProvider from \"./context/Provider\";\nimport Container from \"./views/Container\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Container />\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}